version: 2.1
executors:
  docker-git:
    docker:
      - image: docker:18.06.0-ce-git
  docker-gcloud-cli:
    docker:
      - image: google/cloud-sdk:slim
  docker-node:
    docker:
      - image: circleci/node:11
  docker-thesis-buildpack:
    docker:
      - image: thesisco/docker-buildpack:bionic

orbs:
  gcp-gcr: circleci/gcp-gcr@0.0.4
  gcp-cli: circleci/gcp-cli@1.8.2

jobs:
  build-and-test:
    # docker:
    #   - image: docker:17.05.0-ce-git
    #     environment:
    #       PROJECT_NAME: thesis-ops
    executor: docker-git
    # do we still want the PROJECT_NAME var here? and if so can I set it at this level?
    environment:
      PROJECT_NAME: thesis-ops
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker Image and Run Tests
          # Note: Tests are run from the Dockerfile
          command: |
            echo $CIRCLE_BUILD_NUM > BUILD
            docker build . -f infrastructure/docker/Dockerfile -t gcr.io/$PROJECT_NAME/heimdall:$CIRCLE_BUILD_NUM
      - run:
          name: Save build
          command: |
            mkdir -p /tmp/heimdall/docker-images/
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo Saving build and build tag for master branch.
              cp ./BUILD /tmp/heimdall/docker-images/BUILD
              docker save -o /tmp/heimdall/docker-images/heimdall.tar gcr.io/$PROJECT_NAME/heimdall:$CIRCLE_BUILD_NUM
            else
              echo Not saving build for development branch.
            fi
      - persist_to_workspace:
          root: /tmp/heimdall
          paths:
            - docker-images
  publish-docker-image:
    executor: gcp-gcr/default
    steps:
      - attach_workspace:
          at: /tmp/heimdall
      - run:
          # Remove this in favor of the Set Gcloud Auth and gcp-gcr steps below?
          name: Set up GCP
          command: |
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud --quiet auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            gcloud --quiet config set project $PROJECT_ID
            gcloud --quiet config set container/cluster $CLUSTER_NAME
            gcloud --quiet container clusters get-credentials $CLUSTER_NAME
            gcloud --quiet auth configure-docker
      - run:
          name: Set Gcloud Auth
          command: |
            echo $GCLOUD_SERVICE_KEY_JUMPHOST_SSH > ~/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ~/gcloud-service-key.json
      - run:
          name: Load Docker image
          command: |
            docker load -i /tmp/heimdall/docker-images/heimdall.tar
            export BUILD_TAG=`cat /tmp/heimdall/docker-images/BUILD`
      - gcp-gcr/gcr-auth:
          google-project-id: GOOGLE_PROJECT_ID
          google-compute-zone: GOOGLE_COMPUTE_ZONE_A
          # This param doesn't actually set anything, leaving here as a reminder to check when they fix it.
          gcloud-service-key: GCLOUD_SERVICE_KEY
      - gcp-gcr/push-image:
          google-project-id: GOOGLE_PROJECT_ID
          registry-url: $GCR_REGISTRY_URL
          image: heimdall
          tag: $BUILD_TAG
  deploy:
    executor: docker-thesis-buildpack
    # do we still want/ need the env var that were previously set in the docker section here?
    # -          PROJECT_NAME: thesis-ops
    # -          PROJECT_ID: thesis-ops
    # -          CLUSTER_NAME: heimdall
    # -          CLOUDSDK_COMPUTE_ZONE: us-east4-c
    steps:
      - attach_workspace:
          at: /tmp/heimdall
      - checkout
      - run:
          name: Deploy Docker Image
          command: |
            # need to ssh into jumphost here, so kubectl cmds in update-image.sh can be excuted?
            export BUILD_TAG=`cat /tmp/heimdall/docker-images/BUILD`
            bash infrastructure/kube/thesis-ops/update-image.sh $BUILD_TAG
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test
      - publish-docker-image:
          filters:
            branches:
              only: master
          requires:
            - build-and-test
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - publish-docker-image
